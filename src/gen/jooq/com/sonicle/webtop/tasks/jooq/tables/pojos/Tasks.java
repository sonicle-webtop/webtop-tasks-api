/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.tasks.jooq.tables.pojos;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tasks implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private java.lang.String       taskId;
    private java.lang.Integer      categoryId;
    private java.lang.String       seriesTaskId;
    private java.lang.String       seriesInstanceId;
    private java.lang.String       parentTaskId;
    private java.lang.String       publicUid;
    private java.lang.String       revisionStatus;
    private org.joda.time.DateTime revisionTimestamp;
    private java.lang.Integer      revisionSequence;
    private org.joda.time.DateTime creationTimestamp;
    private java.lang.String       organizer;
    private java.lang.String       organizerId;
    private java.lang.String       subject;
    private java.lang.String       location;
    private java.lang.String       descriptionType;
    private java.lang.String       description;
    private java.lang.String       timezone;
    private org.joda.time.DateTime start;
    private org.joda.time.DateTime due;
    private org.joda.time.DateTime completedOn;
    private java.lang.Short        progress;
    private java.lang.String       status;
    private java.lang.Short        importance;
    private java.lang.Boolean      isPrivate;
    private java.lang.String       documentRef;
    private java.lang.String       href;
    private java.lang.String       etag;
    private java.lang.Integer      reminder;
    private org.joda.time.DateTime remindedOn;
    private java.lang.String       contact;
    private java.lang.String       contactId;
    private java.lang.String       company;
    private java.lang.String       companyId;

    public Tasks() {}

    public Tasks(Tasks value) {
        this.taskId = value.taskId;
        this.categoryId = value.categoryId;
        this.seriesTaskId = value.seriesTaskId;
        this.seriesInstanceId = value.seriesInstanceId;
        this.parentTaskId = value.parentTaskId;
        this.publicUid = value.publicUid;
        this.revisionStatus = value.revisionStatus;
        this.revisionTimestamp = value.revisionTimestamp;
        this.revisionSequence = value.revisionSequence;
        this.creationTimestamp = value.creationTimestamp;
        this.organizer = value.organizer;
        this.organizerId = value.organizerId;
        this.subject = value.subject;
        this.location = value.location;
        this.descriptionType = value.descriptionType;
        this.description = value.description;
        this.timezone = value.timezone;
        this.start = value.start;
        this.due = value.due;
        this.completedOn = value.completedOn;
        this.progress = value.progress;
        this.status = value.status;
        this.importance = value.importance;
        this.isPrivate = value.isPrivate;
        this.documentRef = value.documentRef;
        this.href = value.href;
        this.etag = value.etag;
        this.reminder = value.reminder;
        this.remindedOn = value.remindedOn;
        this.contact = value.contact;
        this.contactId = value.contactId;
        this.company = value.company;
        this.companyId = value.companyId;
    }

    public Tasks(
        java.lang.String       taskId,
        java.lang.Integer      categoryId,
        java.lang.String       seriesTaskId,
        java.lang.String       seriesInstanceId,
        java.lang.String       parentTaskId,
        java.lang.String       publicUid,
        java.lang.String       revisionStatus,
        org.joda.time.DateTime revisionTimestamp,
        java.lang.Integer      revisionSequence,
        org.joda.time.DateTime creationTimestamp,
        java.lang.String       organizer,
        java.lang.String       organizerId,
        java.lang.String       subject,
        java.lang.String       location,
        java.lang.String       descriptionType,
        java.lang.String       description,
        java.lang.String       timezone,
        org.joda.time.DateTime start,
        org.joda.time.DateTime due,
        org.joda.time.DateTime completedOn,
        java.lang.Short        progress,
        java.lang.String       status,
        java.lang.Short        importance,
        java.lang.Boolean      isPrivate,
        java.lang.String       documentRef,
        java.lang.String       href,
        java.lang.String       etag,
        java.lang.Integer      reminder,
        org.joda.time.DateTime remindedOn,
        java.lang.String       contact,
        java.lang.String       contactId,
        java.lang.String       company,
        java.lang.String       companyId
    ) {
        this.taskId = taskId;
        this.categoryId = categoryId;
        this.seriesTaskId = seriesTaskId;
        this.seriesInstanceId = seriesInstanceId;
        this.parentTaskId = parentTaskId;
        this.publicUid = publicUid;
        this.revisionStatus = revisionStatus;
        this.revisionTimestamp = revisionTimestamp;
        this.revisionSequence = revisionSequence;
        this.creationTimestamp = creationTimestamp;
        this.organizer = organizer;
        this.organizerId = organizerId;
        this.subject = subject;
        this.location = location;
        this.descriptionType = descriptionType;
        this.description = description;
        this.timezone = timezone;
        this.start = start;
        this.due = due;
        this.completedOn = completedOn;
        this.progress = progress;
        this.status = status;
        this.importance = importance;
        this.isPrivate = isPrivate;
        this.documentRef = documentRef;
        this.href = href;
        this.etag = etag;
        this.reminder = reminder;
        this.remindedOn = remindedOn;
        this.contact = contact;
        this.contactId = contactId;
        this.company = company;
        this.companyId = companyId;
    }

    /**
     * Getter for <code>tasks.tasks.task_id</code>.
     */
    public java.lang.String getTaskId() {
        return this.taskId;
    }

    /**
     * Setter for <code>tasks.tasks.task_id</code>.
     */
    public void setTaskId(java.lang.String taskId) {
        this.taskId = taskId;
    }

    /**
     * Getter for <code>tasks.tasks.category_id</code>.
     */
    public java.lang.Integer getCategoryId() {
        return this.categoryId;
    }

    /**
     * Setter for <code>tasks.tasks.category_id</code>.
     */
    public void setCategoryId(java.lang.Integer categoryId) {
        this.categoryId = categoryId;
    }

    /**
     * Getter for <code>tasks.tasks.series_task_id</code>.
     */
    public java.lang.String getSeriesTaskId() {
        return this.seriesTaskId;
    }

    /**
     * Setter for <code>tasks.tasks.series_task_id</code>.
     */
    public void setSeriesTaskId(java.lang.String seriesTaskId) {
        this.seriesTaskId = seriesTaskId;
    }

    /**
     * Getter for <code>tasks.tasks.series_instance_id</code>.
     */
    public java.lang.String getSeriesInstanceId() {
        return this.seriesInstanceId;
    }

    /**
     * Setter for <code>tasks.tasks.series_instance_id</code>.
     */
    public void setSeriesInstanceId(java.lang.String seriesInstanceId) {
        this.seriesInstanceId = seriesInstanceId;
    }

    /**
     * Getter for <code>tasks.tasks.parent_task_id</code>.
     */
    public java.lang.String getParentTaskId() {
        return this.parentTaskId;
    }

    /**
     * Setter for <code>tasks.tasks.parent_task_id</code>.
     */
    public void setParentTaskId(java.lang.String parentTaskId) {
        this.parentTaskId = parentTaskId;
    }

    /**
     * Getter for <code>tasks.tasks.public_uid</code>.
     */
    public java.lang.String getPublicUid() {
        return this.publicUid;
    }

    /**
     * Setter for <code>tasks.tasks.public_uid</code>.
     */
    public void setPublicUid(java.lang.String publicUid) {
        this.publicUid = publicUid;
    }

    /**
     * Getter for <code>tasks.tasks.revision_status</code>.
     */
    public java.lang.String getRevisionStatus() {
        return this.revisionStatus;
    }

    /**
     * Setter for <code>tasks.tasks.revision_status</code>.
     */
    public void setRevisionStatus(java.lang.String revisionStatus) {
        this.revisionStatus = revisionStatus;
    }

    /**
     * Getter for <code>tasks.tasks.revision_timestamp</code>.
     */
    public org.joda.time.DateTime getRevisionTimestamp() {
        return this.revisionTimestamp;
    }

    /**
     * Setter for <code>tasks.tasks.revision_timestamp</code>.
     */
    public void setRevisionTimestamp(org.joda.time.DateTime revisionTimestamp) {
        this.revisionTimestamp = revisionTimestamp;
    }

    /**
     * Getter for <code>tasks.tasks.revision_sequence</code>.
     */
    public java.lang.Integer getRevisionSequence() {
        return this.revisionSequence;
    }

    /**
     * Setter for <code>tasks.tasks.revision_sequence</code>.
     */
    public void setRevisionSequence(java.lang.Integer revisionSequence) {
        this.revisionSequence = revisionSequence;
    }

    /**
     * Getter for <code>tasks.tasks.creation_timestamp</code>.
     */
    public org.joda.time.DateTime getCreationTimestamp() {
        return this.creationTimestamp;
    }

    /**
     * Setter for <code>tasks.tasks.creation_timestamp</code>.
     */
    public void setCreationTimestamp(org.joda.time.DateTime creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
    }

    /**
     * Getter for <code>tasks.tasks.organizer</code>.
     */
    public java.lang.String getOrganizer() {
        return this.organizer;
    }

    /**
     * Setter for <code>tasks.tasks.organizer</code>.
     */
    public void setOrganizer(java.lang.String organizer) {
        this.organizer = organizer;
    }

    /**
     * Getter for <code>tasks.tasks.organizer_id</code>.
     */
    public java.lang.String getOrganizerId() {
        return this.organizerId;
    }

    /**
     * Setter for <code>tasks.tasks.organizer_id</code>.
     */
    public void setOrganizerId(java.lang.String organizerId) {
        this.organizerId = organizerId;
    }

    /**
     * Getter for <code>tasks.tasks.subject</code>.
     */
    public java.lang.String getSubject() {
        return this.subject;
    }

    /**
     * Setter for <code>tasks.tasks.subject</code>.
     */
    public void setSubject(java.lang.String subject) {
        this.subject = subject;
    }

    /**
     * Getter for <code>tasks.tasks.location</code>.
     */
    public java.lang.String getLocation() {
        return this.location;
    }

    /**
     * Setter for <code>tasks.tasks.location</code>.
     */
    public void setLocation(java.lang.String location) {
        this.location = location;
    }

    /**
     * Getter for <code>tasks.tasks.description_type</code>.
     */
    public java.lang.String getDescriptionType() {
        return this.descriptionType;
    }

    /**
     * Setter for <code>tasks.tasks.description_type</code>.
     */
    public void setDescriptionType(java.lang.String descriptionType) {
        this.descriptionType = descriptionType;
    }

    /**
     * Getter for <code>tasks.tasks.description</code>.
     */
    public java.lang.String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>tasks.tasks.description</code>.
     */
    public void setDescription(java.lang.String description) {
        this.description = description;
    }

    /**
     * Getter for <code>tasks.tasks.timezone</code>.
     */
    public java.lang.String getTimezone() {
        return this.timezone;
    }

    /**
     * Setter for <code>tasks.tasks.timezone</code>.
     */
    public void setTimezone(java.lang.String timezone) {
        this.timezone = timezone;
    }

    /**
     * Getter for <code>tasks.tasks.start</code>.
     */
    public org.joda.time.DateTime getStart() {
        return this.start;
    }

    /**
     * Setter for <code>tasks.tasks.start</code>.
     */
    public void setStart(org.joda.time.DateTime start) {
        this.start = start;
    }

    /**
     * Getter for <code>tasks.tasks.due</code>.
     */
    public org.joda.time.DateTime getDue() {
        return this.due;
    }

    /**
     * Setter for <code>tasks.tasks.due</code>.
     */
    public void setDue(org.joda.time.DateTime due) {
        this.due = due;
    }

    /**
     * Getter for <code>tasks.tasks.completed_on</code>.
     */
    public org.joda.time.DateTime getCompletedOn() {
        return this.completedOn;
    }

    /**
     * Setter for <code>tasks.tasks.completed_on</code>.
     */
    public void setCompletedOn(org.joda.time.DateTime completedOn) {
        this.completedOn = completedOn;
    }

    /**
     * Getter for <code>tasks.tasks.progress</code>.
     */
    public java.lang.Short getProgress() {
        return this.progress;
    }

    /**
     * Setter for <code>tasks.tasks.progress</code>.
     */
    public void setProgress(java.lang.Short progress) {
        this.progress = progress;
    }

    /**
     * Getter for <code>tasks.tasks.status</code>.
     */
    public java.lang.String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>tasks.tasks.status</code>.
     */
    public void setStatus(java.lang.String status) {
        this.status = status;
    }

    /**
     * Getter for <code>tasks.tasks.importance</code>.
     */
    public java.lang.Short getImportance() {
        return this.importance;
    }

    /**
     * Setter for <code>tasks.tasks.importance</code>.
     */
    public void setImportance(java.lang.Short importance) {
        this.importance = importance;
    }

    /**
     * Getter for <code>tasks.tasks.is_private</code>.
     */
    public java.lang.Boolean getIsPrivate() {
        return this.isPrivate;
    }

    /**
     * Setter for <code>tasks.tasks.is_private</code>.
     */
    public void setIsPrivate(java.lang.Boolean isPrivate) {
        this.isPrivate = isPrivate;
    }

    /**
     * Getter for <code>tasks.tasks.document_ref</code>.
     */
    public java.lang.String getDocumentRef() {
        return this.documentRef;
    }

    /**
     * Setter for <code>tasks.tasks.document_ref</code>.
     */
    public void setDocumentRef(java.lang.String documentRef) {
        this.documentRef = documentRef;
    }

    /**
     * Getter for <code>tasks.tasks.href</code>.
     */
    public java.lang.String getHref() {
        return this.href;
    }

    /**
     * Setter for <code>tasks.tasks.href</code>.
     */
    public void setHref(java.lang.String href) {
        this.href = href;
    }

    /**
     * Getter for <code>tasks.tasks.etag</code>.
     */
    public java.lang.String getEtag() {
        return this.etag;
    }

    /**
     * Setter for <code>tasks.tasks.etag</code>.
     */
    public void setEtag(java.lang.String etag) {
        this.etag = etag;
    }

    /**
     * Getter for <code>tasks.tasks.reminder</code>.
     */
    public java.lang.Integer getReminder() {
        return this.reminder;
    }

    /**
     * Setter for <code>tasks.tasks.reminder</code>.
     */
    public void setReminder(java.lang.Integer reminder) {
        this.reminder = reminder;
    }

    /**
     * Getter for <code>tasks.tasks.reminded_on</code>.
     */
    public org.joda.time.DateTime getRemindedOn() {
        return this.remindedOn;
    }

    /**
     * Setter for <code>tasks.tasks.reminded_on</code>.
     */
    public void setRemindedOn(org.joda.time.DateTime remindedOn) {
        this.remindedOn = remindedOn;
    }

    /**
     * Getter for <code>tasks.tasks.contact</code>.
     */
    public java.lang.String getContact() {
        return this.contact;
    }

    /**
     * Setter for <code>tasks.tasks.contact</code>.
     */
    public void setContact(java.lang.String contact) {
        this.contact = contact;
    }

    /**
     * Getter for <code>tasks.tasks.contact_id</code>.
     */
    public java.lang.String getContactId() {
        return this.contactId;
    }

    /**
     * Setter for <code>tasks.tasks.contact_id</code>.
     */
    public void setContactId(java.lang.String contactId) {
        this.contactId = contactId;
    }

    /**
     * Getter for <code>tasks.tasks.company</code>.
     */
    public java.lang.String getCompany() {
        return this.company;
    }

    /**
     * Setter for <code>tasks.tasks.company</code>.
     */
    public void setCompany(java.lang.String company) {
        this.company = company;
    }

    /**
     * Getter for <code>tasks.tasks.company_id</code>.
     */
    public java.lang.String getCompanyId() {
        return this.companyId;
    }

    /**
     * Setter for <code>tasks.tasks.company_id</code>.
     */
    public void setCompanyId(java.lang.String companyId) {
        this.companyId = companyId;
    }

    @Override
    public String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("Tasks (");

        sb.append(taskId);
        sb.append(", ").append(categoryId);
        sb.append(", ").append(seriesTaskId);
        sb.append(", ").append(seriesInstanceId);
        sb.append(", ").append(parentTaskId);
        sb.append(", ").append(publicUid);
        sb.append(", ").append(revisionStatus);
        sb.append(", ").append(revisionTimestamp);
        sb.append(", ").append(revisionSequence);
        sb.append(", ").append(creationTimestamp);
        sb.append(", ").append(organizer);
        sb.append(", ").append(organizerId);
        sb.append(", ").append(subject);
        sb.append(", ").append(location);
        sb.append(", ").append(descriptionType);
        sb.append(", ").append(description);
        sb.append(", ").append(timezone);
        sb.append(", ").append(start);
        sb.append(", ").append(due);
        sb.append(", ").append(completedOn);
        sb.append(", ").append(progress);
        sb.append(", ").append(status);
        sb.append(", ").append(importance);
        sb.append(", ").append(isPrivate);
        sb.append(", ").append(documentRef);
        sb.append(", ").append(href);
        sb.append(", ").append(etag);
        sb.append(", ").append(reminder);
        sb.append(", ").append(remindedOn);
        sb.append(", ").append(contact);
        sb.append(", ").append(contactId);
        sb.append(", ").append(company);
        sb.append(", ").append(companyId);

        sb.append(")");
        return sb.toString();
    }
}
