/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.tasks.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tasks extends org.jooq.impl.TableImpl<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tasks.tasks</code>
     */
    public static final Tasks TASKS_ = new Tasks();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord> getRecordType() {
        return com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord.class;
    }

    /**
     * The column <code>tasks.tasks.task_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> TASK_ID = createField(org.jooq.impl.DSL.name("task_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>tasks.tasks.category_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.Integer> CATEGORY_ID = createField(org.jooq.impl.DSL.name("category_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tasks.tasks.series_task_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> SERIES_TASK_ID = createField(org.jooq.impl.DSL.name("series_task_id"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>tasks.tasks.series_instance_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> SERIES_INSTANCE_ID = createField(org.jooq.impl.DSL.name("series_instance_id"), org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>tasks.tasks.parent_task_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> PARENT_TASK_ID = createField(org.jooq.impl.DSL.name("parent_task_id"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>tasks.tasks.public_uid</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> PUBLIC_UID = createField(org.jooq.impl.DSL.name("public_uid"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tasks.tasks.revision_status</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> REVISION_STATUS = createField(org.jooq.impl.DSL.name("revision_status"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>tasks.tasks.revision_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, org.joda.time.DateTime> REVISION_TIMESTAMP = createField(org.jooq.impl.DSL.name("revision_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>tasks.tasks.revision_sequence</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.Integer> REVISION_SEQUENCE = createField(org.jooq.impl.DSL.name("revision_sequence"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tasks.tasks.creation_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, org.joda.time.DateTime> CREATION_TIMESTAMP = createField(org.jooq.impl.DSL.name("creation_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>tasks.tasks.organizer</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> ORGANIZER = createField(org.jooq.impl.DSL.name("organizer"), org.jooq.impl.SQLDataType.VARCHAR(650), this, "");

    /**
     * The column <code>tasks.tasks.organizer_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> ORGANIZER_ID = createField(org.jooq.impl.DSL.name("organizer_id"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>tasks.tasks.subject</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> SUBJECT = createField(org.jooq.impl.DSL.name("subject"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>tasks.tasks.location</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> LOCATION = createField(org.jooq.impl.DSL.name("location"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tasks.tasks.description_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> DESCRIPTION_TYPE = createField(org.jooq.impl.DSL.name("description_type"), org.jooq.impl.SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>tasks.tasks.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tasks.tasks.timezone</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> TIMEZONE = createField(org.jooq.impl.DSL.name("timezone"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>tasks.tasks.start</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, org.joda.time.DateTime> START = createField(org.jooq.impl.DSL.name("start"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>tasks.tasks.due</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, org.joda.time.DateTime> DUE = createField(org.jooq.impl.DSL.name("due"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>tasks.tasks.completed_on</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, org.joda.time.DateTime> COMPLETED_ON = createField(org.jooq.impl.DSL.name("completed_on"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>tasks.tasks.progress</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.Short> PROGRESS = createField(org.jooq.impl.DSL.name("progress"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>tasks.tasks.status</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> STATUS = createField(org.jooq.impl.DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false).defaultValue(org.jooq.impl.DSL.field("'NA'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>tasks.tasks.importance</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.Short> IMPORTANCE = createField(org.jooq.impl.DSL.name("importance"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>tasks.tasks.is_private</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.Boolean> IS_PRIVATE = createField(org.jooq.impl.DSL.name("is_private"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>tasks.tasks.document_ref</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> DOCUMENT_REF = createField(org.jooq.impl.DSL.name("document_ref"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>tasks.tasks.href</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> HREF = createField(org.jooq.impl.DSL.name("href"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>tasks.tasks.etag</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> ETAG = createField(org.jooq.impl.DSL.name("etag"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tasks.tasks.reminder</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.Integer> REMINDER = createField(org.jooq.impl.DSL.name("reminder"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tasks.tasks.reminded_on</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, org.joda.time.DateTime> REMINDED_ON = createField(org.jooq.impl.DSL.name("reminded_on"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>tasks.tasks.contact</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> CONTACT = createField(org.jooq.impl.DSL.name("contact"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tasks.tasks.contact_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> CONTACT_ID = createField(org.jooq.impl.DSL.name("contact_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tasks.tasks.company</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> COMPANY = createField(org.jooq.impl.DSL.name("company"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tasks.tasks.company_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, java.lang.String> COMPANY_ID = createField(org.jooq.impl.DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    private Tasks(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tasks(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>tasks.tasks</code> table reference
     */
    public Tasks(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), TASKS_);
    }

    /**
     * Create an aliased <code>tasks.tasks</code> table reference
     */
    public Tasks(org.jooq.Name alias) {
        this(alias, TASKS_);
    }

    /**
     * Create a <code>tasks.tasks</code> table reference
     */
    public Tasks() {
        this(org.jooq.impl.DSL.name("tasks"), null);
    }

    public <O extends org.jooq.Record> Tasks(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord> key) {
        super(child, key, TASKS_);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.tasks.jooq.Tasks.TASKS;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.tasks.jooq.Indexes.TASKS_AK1, com.sonicle.webtop.tasks.jooq.Indexes.TASKS_AK2, com.sonicle.webtop.tasks.jooq.Indexes.TASKS_AK3);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord> getPrimaryKey() {
        return com.sonicle.webtop.tasks.jooq.Keys.TASKS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord>>asList(com.sonicle.webtop.tasks.jooq.Keys.TASKS_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksRecord, ?>>asList(com.sonicle.webtop.tasks.jooq.Keys.TASKS__TASKS_SERIES_TASK_ID_FKEY, com.sonicle.webtop.tasks.jooq.Keys.TASKS__TASKS_PARENT_TASK_ID_FKEY);
    }

    private transient com.sonicle.webtop.tasks.jooq.tables.Tasks _tasksSeriesTaskIdFkey;
    private transient com.sonicle.webtop.tasks.jooq.tables.Tasks _tasksParentTaskIdFkey;

    public com.sonicle.webtop.tasks.jooq.tables.Tasks tasksSeriesTaskIdFkey() {
        if (_tasksSeriesTaskIdFkey == null)
            _tasksSeriesTaskIdFkey = new com.sonicle.webtop.tasks.jooq.tables.Tasks(this, com.sonicle.webtop.tasks.jooq.Keys.TASKS__TASKS_SERIES_TASK_ID_FKEY);

        return _tasksSeriesTaskIdFkey;
    }

    public com.sonicle.webtop.tasks.jooq.tables.Tasks tasksParentTaskIdFkey() {
        if (_tasksParentTaskIdFkey == null)
            _tasksParentTaskIdFkey = new com.sonicle.webtop.tasks.jooq.tables.Tasks(this, com.sonicle.webtop.tasks.jooq.Keys.TASKS__TASKS_PARENT_TASK_ID_FKEY);

        return _tasksParentTaskIdFkey;
    }

    @java.lang.Override
    public Tasks as(java.lang.String alias) {
        return new Tasks(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Tasks as(org.jooq.Name alias) {
        return new Tasks(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Tasks rename(java.lang.String name) {
        return new Tasks(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Tasks rename(org.jooq.Name name) {
        return new Tasks(name, null);
    }
}
