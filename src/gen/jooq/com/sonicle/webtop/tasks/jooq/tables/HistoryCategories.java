/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.tasks.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryCategories extends org.jooq.impl.TableImpl<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tasks.history_categories</code>
     */
    public static final HistoryCategories HISTORY_CATEGORIES = new HistoryCategories();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord> getRecordType() {
        return com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord.class;
    }

    /**
     * The column <code>tasks.history_categories.id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord, java.lang.Long> ID = createField(org.jooq.impl.DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('tasks.seq_history_categories'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>tasks.history_categories.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>tasks.history_categories.user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord, java.lang.String> USER_ID = createField(org.jooq.impl.DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>tasks.history_categories.category_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord, java.lang.Integer> CATEGORY_ID = createField(org.jooq.impl.DSL.name("category_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tasks.history_categories.change_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord, org.joda.time.DateTime> CHANGE_TIMESTAMP = createField(org.jooq.impl.DSL.name("change_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(org.jooq.impl.DSL.field("'1970-01-01 01:00:00+01'::timestamp with time zone", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>tasks.history_categories.change_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord, java.lang.String> CHANGE_TYPE = createField(org.jooq.impl.DSL.name("change_type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    private HistoryCategories(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private HistoryCategories(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>tasks.history_categories</code> table reference
     */
    public HistoryCategories(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), HISTORY_CATEGORIES);
    }

    /**
     * Create an aliased <code>tasks.history_categories</code> table reference
     */
    public HistoryCategories(org.jooq.Name alias) {
        this(alias, HISTORY_CATEGORIES);
    }

    /**
     * Create a <code>tasks.history_categories</code> table reference
     */
    public HistoryCategories() {
        this(org.jooq.impl.DSL.name("history_categories"), null);
    }

    public <O extends org.jooq.Record> HistoryCategories(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord> key) {
        super(child, key, HISTORY_CATEGORIES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.tasks.jooq.Tasks.TASKS;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.tasks.jooq.Indexes.HISTORY_CATEGORIES_AK1, com.sonicle.webtop.tasks.jooq.Indexes.HISTORY_CATEGORIES_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord> getPrimaryKey() {
        return com.sonicle.webtop.tasks.jooq.Keys.HISTORY_CATEGORIES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.HistoryCategoriesRecord>>asList(com.sonicle.webtop.tasks.jooq.Keys.HISTORY_CATEGORIES_PKEY);
    }

    @java.lang.Override
    public HistoryCategories as(java.lang.String alias) {
        return new HistoryCategories(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public HistoryCategories as(org.jooq.Name alias) {
        return new HistoryCategories(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public HistoryCategories rename(java.lang.String name) {
        return new HistoryCategories(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public HistoryCategories rename(org.jooq.Name name) {
        return new HistoryCategories(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row6<java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer, org.joda.time.DateTime, java.lang.String> fieldsRow() {
        return (org.jooq.Row6) super.fieldsRow();
    }
}
