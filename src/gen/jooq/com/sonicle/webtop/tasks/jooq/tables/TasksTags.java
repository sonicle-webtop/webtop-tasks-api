/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.tasks.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TasksTags extends org.jooq.impl.TableImpl<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tasks.tasks_tags</code>
     */
    public static final TasksTags TASKS_TAGS = new TasksTags();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord> getRecordType() {
        return com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord.class;
    }

    /**
     * The column <code>tasks.tasks_tags.task_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord, java.lang.String> TASK_ID = createField(org.jooq.impl.DSL.name("task_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>tasks.tasks_tags.tag_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord, java.lang.String> TAG_ID = createField(org.jooq.impl.DSL.name("tag_id"), org.jooq.impl.SQLDataType.VARCHAR(22).nullable(false), this, "");

    private TasksTags(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TasksTags(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>tasks.tasks_tags</code> table reference
     */
    public TasksTags(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), TASKS_TAGS);
    }

    /**
     * Create an aliased <code>tasks.tasks_tags</code> table reference
     */
    public TasksTags(org.jooq.Name alias) {
        this(alias, TASKS_TAGS);
    }

    /**
     * Create a <code>tasks.tasks_tags</code> table reference
     */
    public TasksTags() {
        this(org.jooq.impl.DSL.name("tasks_tags"), null);
    }

    public <O extends org.jooq.Record> TasksTags(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord> key) {
        super(child, key, TASKS_TAGS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.tasks.jooq.Tasks.TASKS;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.tasks.jooq.Indexes.TASKS_TAGS_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord> getPrimaryKey() {
        return com.sonicle.webtop.tasks.jooq.Keys.TASKS_TAGS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.tasks.jooq.tables.records.TasksTagsRecord>>asList(com.sonicle.webtop.tasks.jooq.Keys.TASKS_TAGS_PKEY);
    }

    @java.lang.Override
    public TasksTags as(java.lang.String alias) {
        return new TasksTags(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public TasksTags as(org.jooq.Name alias) {
        return new TasksTags(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public TasksTags rename(java.lang.String name) {
        return new TasksTags(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public TasksTags rename(org.jooq.Name name) {
        return new TasksTags(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row2<java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row2) super.fieldsRow();
    }
}
